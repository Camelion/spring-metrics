buildscript {
    repositories {
        mavenLocal()
    }

    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M4'
    }
}

plugins {
    id 'me.champeau.gradle.jmh' version '0.3.1'
    id 'nebula.optional-base' version '3.1.0'
    id 'io.spring.release' version '0.2.0'
}

apply plugin: 'org.junit.platform.gradle.plugin'

repositories {
    maven { url 'https://repo.spring.io/libs-milestone' }
    maven { url 'https://repo.spring.io/libs-snapshot' }
}

ext {
    springBootVersion = findProperty('springBootVersion') ?: '2.0.0.BUILD-SNAPSHOT'
    springVersion = findProperty('springVersion') ?: '5.0.0.BUILD-SNAPSHOT'
}

group = 'org.springframework.metrics'
description = 'Application monitoring metrics for Spring applications'

contacts {
    'jkschneider@gmail.com' {
        moniker 'Jon Schneider'
        github 'jkschneider'
    }
}

dependencies {
    compile "org.springframework:spring-beans:$project.springBootVersion", optional
    compile "org.springframework.boot:spring-boot:$project.springBootVersion", optional
    compile "org.springframework.boot:spring-boot-actuator:$project.springBootVersion", optional
    compile "org.springframework.boot:spring-boot-starter-aop:$project.springBootVersion", optional
    compile "org.springframework:spring-webmvc:$project.springVersion", optional
    compile "org.springframework:spring-webflux:$project.springVersion", optional
    compile "org.springframework:spring-web:$project.springVersion", optional
    compile 'javax.servlet:javax.servlet-api:3.1.0', optional
    compile 'org.aspectj:aspectjweaver:1.8.+', optional

    // instrumentation options
    compile 'com.netflix.spectator:spectator-api:latest.release', optional
    compile 'io.prometheus:simpleclient:latest.release', optional
    compile 'io.prometheus:simpleclient_pushgateway:latest.release', optional
    compile 'com.datadoghq:java-dogstatsd-client:latest.release', optional
    compile 'io.dropwizard.metrics:metrics-core:latest.release', optional

    // exporters
    compile 'com.netflix.spectator:spectator-reg-atlas:latest.release', optional

    // cache monitoring
    compile 'com.google.guava:guava:21.0', optional

    // log monitoring
    compile 'ch.qos.logback:logback-classic:latest.release', optional

    // JUnit 5
    testCompile 'org.junit.platform:junit-platform-launcher:1.0.0-M5' // see https://github.com/junit-team/junit5/issues/586 for why this is necessary
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.0.0-M5'
    testCompile 'org.junit.jupiter:junit-jupiter-params:5.0.0-M5'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.0.0-M5'

    testCompile 'org.assertj:assertj-core:3.+'

    testCompile("org.springframework.boot:spring-boot-starter-web:$project.springBootVersion") {
        // snapshots of boot-starter-web can depend on RC's of spring-web(mvc), pulling the versions down
        exclude module: 'spring-webmvc'
        exclude module: 'spring-web'
    }
    testCompile "org.springframework.boot:spring-boot-actuator:$project.springBootVersion"
    testCompile "org.springframework.boot:spring-boot-starter-test:$project.springBootVersion"
    testCompile 'org.springframework:spring-test:5.0.0.BUILD-SNAPSHOT' // earlier versions did not contain JUnit 5 support

    testCompile 'io.projectreactor.addons:reactor-test:3.1.0.BUILD-SNAPSHOT'
    testCompile 'io.projectreactor.ipc:reactor-netty:latest.release'

    // for use in mock servers
    testCompile 'org.springframework:spring-webflux:5.0.0.BUILD-SNAPSHOT'
    testCompile 'org.apache.tomcat.embed:tomcat-embed-core:8.5.15'

    testRuntime 'org.apache.httpcomponents:httpclient:4.4+'

    jmh 'org.openjdk.jmh:jmh-core:latest.release'
    jmh 'org.openjdk.jmh:jmh-generator-annprocess:latest.release'
    jmh "org.springframework.boot:spring-boot-actuator:$project.springBootVersion"
    jmh 'colt:colt:1.2.0'
}

jmh {
    jmhVersion = '1.18'
    warmupIterations = 2
    iterations = 5
    fork = 0
    duplicateClassesStrategy = 'warn'
}

if(project.extensions.findByName('bintray')) {
    bintray.pkg {
        labels = ['spring', 'metrics', 'prometheus', 'spectator']
    }
}